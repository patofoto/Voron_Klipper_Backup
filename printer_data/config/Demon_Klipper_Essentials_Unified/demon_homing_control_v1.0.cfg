
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# IF YOU USE & LIKE THESE MACROS PLEASE CONSIDER SUPPORTING MY EFFORTS AT 
# https://ko-fi.com/3dprintdemon


## IF USING KLICKY PROBE COMMENT OUT EVERYTHING FROM HERE TO LINE 119!! 

[homing_override]
axes: xyz
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if start_vars.klicky_probe == True %}
    { action_raise_error("You appear to be using Klicky_probe but homing_override is defined in your demon_homing_control.cfg. Please comment out the entire [homing_override] macro to continue") }

  {% else %}

    _HOME_POWER_SAFETY
    RESPOND TYPE=COMMAND MSG="Homing requested"
    _DRIVER_DEFINER
    
    {% if start_vars.neopixel_led == True %}
      STATUS_HOMING
    {% endif %}
    
    _SET_Z_PARK

    {% if 'z' not in printer.toolhead.homed_axes %}
      {% if 'x' not in printer.toolhead.homed_axes or 'y' not in printer.toolhead.homed_axes %} 
        {% if 'Z' in params %}
          { action_raise_error("Request denied, operation cancalled! Home X & Y axes first before requesting homing Z") }

        {% else %}

          {% if 'x' in printer.toolhead.homed_axes or 'y' in printer.toolhead.homed_axes %}
        
          {% else %}

            RESPOND TYPE=COMMAND MSG="Raising Z axis for safe clearance prior to homing"
            _Z_LIFT

          {% endif %}
        {% endif %}  
      {% endif %}

    {% else %}

      {% if printer.toolhead.position.z|float < 5 %}
        RESPOND TYPE=COMMAND MSG="Z axis <5mm. Raising for safe clearance prior to homing"
        _Z_LIFT
      {% endif %} 
    {% endif %}  

    {% if home_all or 'X' in params %}
      _HOME_X
    {% endif %}
 
    {% if home_all or 'Y' in params %}
      _HOME_Y
    {% endif %}
 
    {% if home_all or 'Z' in params %}

      {% if start_vars.aes_system == True %}
        SET_GCODE_VARIABLE MACRO=_AES_SYS VARIABLE=e_stop_armed VALUE=True
        _AES_READ
      {% endif %}
      
      {% if printer.configfile.settings.stepper_z.endstop_pin == 'probe:z_virtual_endstop' %}
        G90
        G0 X{printer.toolhead.axis_maximum.x|float / 2} Y{printer.toolhead.axis_maximum.y|float / 2} F{start_vars.homing_movement_travel_speed|int * 60}

      {% else %}
        G90
        G0 X{start_vars.z_endstop_loaction_x|float} Y{start_vars.z_endstop_loaction_y|float} F{start_vars.homing_movement_travel_speed|int * 60}
      {% endif %}

      G28 Z 
      M400

      {% if printer.configfile.settings.stepper_z.endstop_pin == 'probe:z_virtual_endstop' %}
        G0 Z10 F3600  
        {% if ('mcu eddy' in printer.configfile.config) %}
          PROBE
          SET_Z_FROM_PROBE
          _Z_PARK
       
        {% else %}
          _Z_PARK
        {% endif %}

      {% else %}
        {% if start_vars.post_z_switch_backoff == True %}
          G0 Z{start_vars.post_z_switch_backoff_height|int} F{start_vars.z_lift_speed|int * 60}
          G91
          G0 Y-{start_vars.post_z_switch_backoff_y_dist|int} F{start_vars.homing_movement_travel_speed|int * 60}
          G90 
        {% endif %}
            
      {% endif %}
    {% endif %}

    {% if start_vars.neopixel_led == True %}
    STATUS_READY
    {% endif %}
    
    M117

    {% if start_vars.aes_system == True %}
      SET_GCODE_VARIABLE MACRO=_AES_SYS VARIABLE=e_stop_armed VALUE=False
      _AES_READ
    {% endif %}
    
  {% endif %}

## IF USING KLICKY PROBE COMMENT OUT EVERYTHING FROM THE TOP TO HERE!! 



[gcode_macro _HOME_X]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set driver_vars = printer["gcode_macro _DRIVER_VARS"] %}

    _HOME_POWER_SAFETY

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={start_vars.home_power|float}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={start_vars.home_power|float}

    G28 X
    G91
    G0 X-{start_vars.axis_backoff_distance|int} F{start_vars.axis_backoff_speed|int * 60}

    G4 P{start_vars.axis_register_clear_wait|float * 1000}

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={driver_vars.run_x|float}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={driver_vars.run_y|float}



[gcode_macro _HOME_Y]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set driver_vars = printer["gcode_macro _DRIVER_VARS"] %}

    _HOME_POWER_SAFETY

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={start_vars.home_power|float}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={start_vars.home_power|float}

    G28 Y
    G91
    G0 Y-{start_vars.axis_backoff_distance|int} F{start_vars.axis_backoff_speed|int * 60}

    G4 P{start_vars.axis_register_clear_wait|float * 1000}

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={driver_vars.run_x|float}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={driver_vars.run_y|float}



[gcode_macro _DRIVER_DEFINER]
gcode:
  {% set driver_vars = printer["gcode_macro _DRIVER_VARS"] %}

  {% if 'tmc2209 stepper_x' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_x VALUE={printer.configfile.config['tmc2209 stepper_x'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2209 driver X axis"
    {% endif %}

  {% elif 'tmc5160 stepper_x' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_x VALUE={printer.configfile.config['tmc5160 stepper_x'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC5160 driver X axis"
    {% endif %}

  {% elif 'tmc2208 stepper_x' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_x VALUE={printer.configfile.config['tmc2208 stepper_x'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2208 driver X axis"
    {% endif %}

  {% elif 'tmc2226 stepper_x' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_x VALUE={printer.configfile.config['tmc2226 stepper_x'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2226 driver X axis"
    {% endif %}

  {% elif 'tmc2225 stepper_x' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_x VALUE={printer.configfile.config['tmc2225 stepper_x'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2225 driver X axis"
    {% endif %}

    {% elif 'tmc2130 stepper_x' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_x VALUE={printer.configfile.config['tmc2130 stepper_x'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2130 driver X axis"
    {% endif %}
    
  {% endif %}

  {% if 'tmc2209 stepper_y' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_y VALUE={printer.configfile.config['tmc2209 stepper_y'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2209 driver Y axis"
    {% endif %}

  {% elif 'tmc5160 stepper_y' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_y VALUE={printer.configfile.config['tmc5160 stepper_y'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC5160 driver Y axis"
    {% endif %}

  {% elif 'tmc2208 stepper_y' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_y VALUE={printer.configfile.config['tmc2208 stepper_y'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2208 driver Y axis"
    {% endif %}

  {% elif 'tmc2226 stepper_y' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_y VALUE={printer.configfile.config['tmc2226 stepper_y'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2226 driver Y axis"
    {% endif %}

  {% elif 'tmc2225 stepper_y' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_y VALUE={printer.configfile.config['tmc2225 stepper_y'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2225 driver Y axis"
    {% endif %}

  {% elif 'tmc2130 stepper_y' in printer.configfile.config %}
    SET_GCODE_VARIABLE MACRO=_DRIVER_VARS VARIABLE=run_y VALUE={printer.configfile.config['tmc2130 stepper_y'].run_current|float}
    {% if driver_vars.readback == True %}
      RESPOND TYPE=COMMAND MSG="Defined TMC2130 driver Y axis"
    {% endif %}
    
  {% endif %}



[gcode_macro _Z_LIFT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
          
  {% if 'z' not in printer.toolhead.homed_axes %}
     RESPOND TYPE=COMMAND MSG="WARNING AXES RESET FOR Z LIFT!!"
     SET_KINEMATIC_POSITION Z=0
     M400
     G90
    {% if start_vars.pre_home_lift|int in range (0, 21) and start_vars.z_lift_speed|int in range (1, 26) %}
      G0 Z{start_vars.pre_home_lift|int} F{start_vars.z_lift_speed|int * 60}
      M400
      # RESPOND TYPE=COMMAND MSG="Disabling axes"
      M84
    {% else %}
      { action_raise_error("Request denied, operation cancalled! Lift height or speed not in range. See demon_user_settings.cfg DEMON HOME CONTROL SETTINGS") }
    {% endif %}
    
  {% else %}
    G90
    {% if start_vars.pre_home_lift|int in range (0, 21) and start_vars.z_lift_speed|int in range (1, 26) %}%}
      G0 Z{start_vars.pre_home_lift|int} F{start_vars.z_lift_speed|int * 60}
      M400
    {% else %}
      { action_raise_error("Request denied, operation cancalled! Lift height or speed not in range. See demon_user_settings.cfg DEMON HOME CONTROL SETTINGS") }
    {% endif %}
  {% endif %}



[gcode_macro _HOME_POWER_SAFETY]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}

  {% if start_vars.override_home_power_safety == False and start_vars.home_power|float > 1.0 %}
    { action_raise_error("Request denied, the operation has been cancalled! Your soft home power levels are too high! See demon_user_settings.cfg DEMON HOME CONTROL SETTINGS where you can override this message if you wish") }
  {% endif %}



[gcode_macro _DRIVER_VARS]
variable_readback: True
variable_run_x: 0.8
variable_run_y: 0.8
gcode:


[gcode_macro _HOME_VERSION]
variable_demon_home_ver: 1.0
gcode:








          
    