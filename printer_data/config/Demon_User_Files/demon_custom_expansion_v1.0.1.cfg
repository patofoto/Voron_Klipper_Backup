
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# File addition inspired by community suggestion from sermayoral 

###################################################################################################################################################

## Add your very own touches to the Demon macros set! Simply insert your own commands into the macros below for them to be executed at certain stages of 
## the PRINT_START, PRINT_END, LOAD_FILAMENT, UNLOAD_FILAMENT, LOAD_CLEAN & UNLOAD_CLEAN macros! Obviously don't call macros like homing & QGL, Z_Tilt, & 
## other stuff the Demon macros already do or you'll probably end up with some very confusing results! 

## NOTE: I'm in no way responsible for any damage caused to your machine by you adding any code here! Be VERY CAREFUL what you add!

## NOTE: If you are getting some strange results & you need to debug your custom expansions the variables section below allows you to turn each one on or 
## off by setting the variable True or False. This is useful if your code is doing something it's not supposed to, or if you simply wish to deactivate something.
## NOTE: It's highly recommended to start with a correctly set up & working system BEFORE adding any Custom Expansions!

############################################## CHANGE YOUR CUSTOM EXPANSION ACTIVE LIST HERE!! ####################################################
###################################################################################################################################################

[gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST]

###################################################################################################################################################
## MASTER ENABLE SWITCH ###########################################################################################################################

variable_ceal_master_enable: True

###################################################################################################################################################
## PRINT_START EXAPANSION #########################################################################################################################

## Set each variable to True to activate the custom macro, or False to deactivate it!

variable_pre_start: False
variable_pre_heating: False
variable_pre_homing: False
variable_pre_bed_heating_wait: False
variable_pre_level: True
variable_pre_mesh: False
variable_pre_print: False

###################################################################################################################################################
## PRINT_END EXPANSION ############################################################################################################################ 

variable_pre_end: False
variable_pre_shutdown: False
variable_post_end: False

###################################################################################################################################################
## LOAD_FILAMENT EXPANSION ########################################################################################################################

variable_pre_load: False
variable_post_load: False

###################################################################################################################################################
## UNLOAD_FILAMENT EXPANSION ######################################################################################################################

variable_pre_unload: False
variable_post_unload: False

###################################################################################################################################################
## LOAD_CLEAN_FILAMENT EXPANSION ##################################################################################################################

variable_pre_load_clean: False
variable_post_load_clean: False

###################################################################################################################################################
## UNLOAD_CLEAN_FILAMENT EXPANSION ################################################################################################################

variable_pre_unload_clean: False
variable_post_unload_clean: False

###################################################################################################################################################
## PID TUNE EXPANSION ################################################################################################################

variable_pre_pid_tune_mode: False
variable_post_pid_tune_mode: False

###################################################################################################################################################
## PAUSE, RESUME & CANCEL EXPANSION ###############################################################################################################

variable_pause: False
variable_resume: False
variable_cancel: False

###################################################################################################################################################

gcode: # DO NOT EDIT OR ADD ANYTHING IN THIS SECTION!!

###################################################################################################################################################
###################################################################################################################################################






###################################################################################################################################################

## Add your custom expansion code for each macro under the "gcode:" line but before the next "gcode_macro" section. Try to keep things neat & tidy as
## this helps you read it & understand whats going on, this is very helpful a week later when you come back to make edits! 

## Remeber your double space indent at the start of each new line!
## Try to add and perfect one macro at a time as its easier to deal with things if done like that!

################################################### ADD YOUR CUSTOM EXPANSION CODE HERE!! #########################################################
###################################################################################################################################################

[gcode_macro _CUSTOM_PRE_START] # Very first action after you hit print!
gcode:




[gcode_macro _CUSTOM_PRE_HEATING] # Before your nozzle & bed start heating
gcode:



[gcode_macro _CUSTOM_PRE_HOMING] # Before your printer homes - homing is conditional!
gcode:



[gcode_macro _CUSTOM_PRE_BED_HEATING_WAIT] # Before your printer waits for your bed temp & starts any heat soaks or timers
gcode:



[gcode_macro _CUSTOM_PRE_LEVEL] # After your printer is fully heated but before any machine levelling is commanded
gcode:

    G28
    {% set first_layer_bedtemp = params.BED|int %}
    {% set actual_bed_temp = printer['temperature_sensor buildplate'].temperature|default(0) %}
    RESPOND PREFIX=DEBUG MSG="Starting G28 with bed temp: {actual_bed_temp}°C, target: {first_layer_bedtemp}°C"

    {% if actual_bed_temp == 0 %}
        RESPOND PREFIX=// MSG="Failed to read temperature_sensor buildplate. Please check your temperature sensor configuration."
        M117 Error: Buildplate sensor not responding
    {% else %}
        {% set stability_time = 120 %}  ; Time in seconds to maintain stable temperature
        {% set check_interval = 10 %}  ; Check temperature every 10 seconds
        {% set max_variation = 2 %}   ; Maximum temperature variation allowed
        RESPOND PREFIX=DEBUG MSG="Stability settings: time={stability_time}s, interval={check_interval}s, max_var={max_variation}°C"

        {% if first_layer_bedtemp <= 0 %}
            M117 Bed heating disabled (target: 0°C)
            RESPOND PREFIX=// MSG="Bed heating disabled (target: 0°C)"
        {% else %}
            M117 Heating bed to: {first_layer_bedtemp}°C
            RESPOND PREFIX=// MSG="Heating bed to: {first_layer_bedtemp}°C"
            
            ; Set the target temperature
            SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={first_layer_bedtemp}
            
            ; Wait for bed to get close to target temperature
            {% set initial_timeout = 1800 %}  ; 30 minutes max wait for initial heating
            {% set target_min = first_layer_bedtemp - 15 %}
            RESPOND PREFIX=DEBUG MSG="Waiting for initial heating to at least {target_min}°C (timeout: {initial_timeout}s)"
            TEMPERATURE_WAIT SENSOR="temperature_sensor buildplate" MINIMUM={target_min} TIMEOUT={initial_timeout}
            RESPOND PREFIX=DEBUG MSG="Initial heating complete, current temp: {printer['temperature_sensor buildplate'].temperature}°C"
            
            ; Start stability check
            M117 Waiting for temperature stability...
            RESPOND PREFIX=// MSG="Waiting for temperature stability..."
            
            ; Initialize stability variables
            {% set required_stable_checks = (stability_time / check_interval)|int %}
            RESPOND PREFIX=DEBUG MSG="Need {required_stable_checks} stable checks, each {check_interval}s long"
            
            ; Track temps and stability counter
            {% set stable_count = 0 %}
            {% set temp_stable = false %}
            {% set last_temp = printer['temperature_sensor buildplate'].temperature %}
            {% set max_temp = last_temp %}
            {% set min_temp = last_temp %}
            
            ; Allow up to 10 minutes to stabilize
            RESPOND PREFIX=DEBUG MSG="Starting stability checks"
            {% for i in range(60) %}
                {% if not temp_stable %}
                    RESPOND PREFIX=DEBUG MSG="Loop iteration {i+1}/60, stable_count: {stable_count}/{required_stable_checks}"
                    
                    ; Wait for the check interval
                    G4 S{check_interval}
                    
                    ; Get current temperature
                    {% set current_temp = printer['temperature_sensor buildplate'].temperature %}
                    RESPOND PREFIX=DEBUG MSG="Current temp: {current_temp}°C"
                    
                    ; If we're starting a new stability window, reset min/max to current temp
                    {% if stable_count == 0 %}
                        {% set min_temp = current_temp %}
                        {% set max_temp = current_temp %}
                        RESPOND PREFIX=DEBUG MSG="Starting new stability window, reset min/max to {current_temp}°C"
                    {% endif %}
                    
                    ; Update min/max if needed
                    {% if current_temp < min_temp %}
                        {% set min_temp = current_temp %}
                        RESPOND PREFIX=DEBUG MSG="New min temperature: {min_temp}°C"
                    {% endif %}
                    {% if current_temp > max_temp %}
                        {% set max_temp = current_temp %}
                        RESPOND PREFIX=DEBUG MSG="New max temperature: {max_temp}°C"
                    {% endif %}
                    
                    ; Calculate variation within the current stability window
                    {% set temp_variation = max_temp - min_temp %}
                    RESPOND PREFIX=DEBUG MSG="Current window: Min={min_temp}°C, Max={max_temp}°C, Variation={temp_variation}°C (limit: {max_variation}°C)"
                    
                    M117 Temp: {current_temp}°C, Var: {temp_variation}°C
                    
                    ; Check if temperature variation is within limit
                    {% if temp_variation <= max_variation %}
                        {% set stable_count = stable_count + 1 %}
                        RESPOND PREFIX=// MSG="Stable reading {stable_count}/{required_stable_checks}: {current_temp}°C"
                        RESPOND PREFIX=DEBUG MSG="Temperature is stable, incrementing count to {stable_count}"
                        
                        {% if stable_count >= required_stable_checks %}
                            {% set temp_stable = true %}
                            RESPOND PREFIX=DEBUG MSG="Required stability achieved!"
                        {% endif %}
                    {% else %}
                        ; Variation too high, start over
                        {% set stable_count = 0 %}
                        RESPOND PREFIX=// MSG="Temperature unstable: {current_temp}°C, variation: {temp_variation}°C"
                        RESPOND PREFIX=DEBUG MSG="Temperature variation {temp_variation}°C exceeds limit of {max_variation}°C, resetting count"
                    {% endif %}
                    
                    ; Remember this temperature for next iteration
                    {% set last_temp = current_temp %}
                {% endif %}
            {% endfor %}
            
            {% if temp_stable %}
                RESPOND PREFIX=// MSG="Bed stabilized at {current_temp}°C"
                M117 Bed stabilized: {current_temp}°C
            {% else %}
                RESPOND PREFIX=// MSG="Bed temperature not stable after 600s"
                M117 Bed temperature not stable!
            {% endif %}
        {% endif %}
    {% endif %}


[gcode_macro _CUSTOM_PRE_MESH] # Before your printer loads or performs any meshing processes
gcode:



[gcode_macro _CUSTOM_PRE_PRINT] # Just before your print starts
gcode:



[gcode_macro _CUSTOM_PRE_END] # Before the PRINT_END macro starts
gcode:



[gcode_macro _CUSTOM_PRE_SHUTDOWN] # Before the shutdown command is issued - if you have a power relay!!
gcode:



[gcode_macro _CUSTOM_POST_END] # Very last command before the PRINT_END macro finishes - if you have set a shutdown via power relay this may not have time
gcode:



[gcode_macro _CUSTOM_PRE_LOAD] # Before filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD] # After filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD] # Before filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD] # After filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_LOAD_CLEAN] # Before filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD_CLEAN] # After filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD_CLEAN] # Before filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD_CLEAN] # After filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_PID_Tune_Mode] # Before PID_Tune_Mode macro runs
gcode:



[gcode_macro _CUSTOM_POST_PID_Tune_Mode] # After PID_Tune_Mode macro runs - but before saving config
gcode:



[gcode_macro _CUSTOM_PAUSE] # After _DEMON_PAUSE macro runs
gcode:



[gcode_macro _CUSTOM_RESUME] # After _DEMON_RESUME macro runs
gcode:



[gcode_macro _CUSTOM_CANCEL] # After _DEMON_CANCEL macro runs
gcode:






###################################################################################################################################################
###################################################################################################################################################
## NOTE: DO NOT EDIT!

[gcode_macro _CEAL_VERSION]
variable_demon_ceal: "1.0.1"
gcode:
