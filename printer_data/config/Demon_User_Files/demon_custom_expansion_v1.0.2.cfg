
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# File addition inspired by community suggestion from sermayoral 

###################################################################################################################################################

## Add your very own touches to the Demon macros set! Simply insert your own commands into the macros below for them to be executed at certain stages of 
## the PRINT_START, PRINT_END, LOAD_FILAMENT, UNLOAD_FILAMENT, LOAD_CLEAN & UNLOAD_CLEAN macros! Obviously don't call macros like homing & QGL, Z_Tilt, & 
## other stuff the Demon macros already do or you'll probably end up with some very confusing results! 

## NOTE: I'm in no way responsible for any damage caused to your machine by you adding any code here! Be VERY CAREFUL what you add!

## NOTE: If you are getting some strange results & you need to debug your custom expansions the variables section below allows you to turn each one on or 
## off by setting the variable True or False. This is useful if your code is doing something it's not supposed to, or if you simply wish to deactivate something.
## NOTE: It's highly recommended to start with a correctly set up & working system BEFORE adding any Custom Expansions!

############################################## CHANGE YOUR CUSTOM EXPANSION ACTIVE LIST HERE!! ####################################################
###################################################################################################################################################

[gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST]

###################################################################################################################################################
## MASTER ENABLE SWITCH ###########################################################################################################################

variable_ceal_master_enable: True

###################################################################################################################################################
## PRINT_START EXAPANSION #########################################################################################################################

## Set each variable to True to activate the custom macro, or False to deactivate it!

variable_pre_start: False
variable_pre_heating: False
variable_pre_homing: False
variable_pre_bed_heating_wait: False
variable_pre_level: True
variable_pre_mesh: False
variable_pre_print: False

###################################################################################################################################################
## PRINT_END EXPANSION ############################################################################################################################ 

variable_pre_end: False
variable_pre_shutdown: False
variable_post_end: False

###################################################################################################################################################
## LOAD_FILAMENT EXPANSION ########################################################################################################################

variable_pre_load: False
variable_post_load: False

###################################################################################################################################################
## UNLOAD_FILAMENT EXPANSION ######################################################################################################################

variable_pre_unload: False
variable_post_unload: False

###################################################################################################################################################
## LOAD_CLEAN_FILAMENT EXPANSION ##################################################################################################################

variable_pre_load_clean: False
variable_post_load_clean: False

###################################################################################################################################################
## UNLOAD_CLEAN_FILAMENT EXPANSION ################################################################################################################

variable_pre_unload_clean: False
variable_post_unload_clean: False

###################################################################################################################################################
## PID TUNE EXPANSION ################################################################################################################

variable_pre_pid_tune_mode: False
variable_post_pid_tune_mode: False

###################################################################################################################################################
## PAUSE, RESUME & CANCEL EXPANSION ###############################################################################################################

variable_pause: False
variable_resume: False
variable_cancel: False

###################################################################################################################################################

gcode: # DO NOT EDIT OR ADD ANYTHING IN THIS SECTION!!

###################################################################################################################################################
###################################################################################################################################################






###################################################################################################################################################

## Add your custom expansion code for each macro under the "gcode:" line but before the next "gcode_macro" section. Try to keep things neat & tidy as
## this helps you read it & understand whats going on, this is very helpful a week later when you come back to make edits! 

## Remeber your double space indent at the start of each new line!
## Try to add and perfect one macro at a time as its easier to deal with things if done like that!

################################################### ADD YOUR CUSTOM EXPANSION CODE HERE!! #########################################################
###################################################################################################################################################

[gcode_macro _CUSTOM_PRE_START] # Very first action after you hit print!
gcode:



[gcode_macro _CUSTOM_PRE_HEATING] # Before your nozzle & bed start heating
gcode:



[gcode_macro _CUSTOM_PRE_HOMING] # Before your printer homes - homing is conditional!
gcode:



[gcode_macro _CUSTOM_PRE_BED_HEATING_WAIT] # Before your printer waits for your bed temp & starts any heat soaks or timers
gcode:



[gcode_macro _CUSTOM_PRE_LEVEL] # After your printer is fully heated but before any machine levelling is commanded
gcode:
  {% set first_layer_bedtemp = params.BED|int %}
  {% set actual_bed_temp = printer['temperature_sensor buildplate'].temperature|default(0) %}
  RESPOND PREFIX=DEBUG MSG="Starting with bed temp: {actual_bed_temp}C, target: {first_layer_bedtemp}C"
  
  # Set the bed temperature and wait for it to reach target
  M190 S{first_layer_bedtemp}
  
  # Hardcoded stabilization parameters optimized for aluminum bed
  {% set temp_tolerance = 10.0 %}         # Aluminum beds hold temp well within ±10°C
  {% set rate_tolerance = 0.3 %}          # Key threshold: change curve must slow to 0.3°C per check
  {% set check_interval = 12 %}           # 12 seconds allows aluminum thermal mass to settle
  {% set num_stable_checks = 4 %}         # 4 consecutive stable readings for confidence
  {% set max_attempts = 15 %}             # Up to 3 minutes of stability monitoring
  
  RESPOND PREFIX=INFO MSG="Waiting for aluminum bed thermal stability (change rate < {rate_tolerance}°C/check)"
  
  # First get within range
  TEMPERATURE_WAIT SENSOR="temperature_sensor buildplate" MINIMUM={first_layer_bedtemp - temp_tolerance} MAXIMUM={first_layer_bedtemp + temp_tolerance}
  RESPOND PREFIX=DEBUG MSG="Temperature in range, monitoring change curve..."
  
  # Use helper macro for the stability monitoring loop
  _ALUMINUM_BED_STABILITY_CHECK BED={first_layer_bedtemp}

[gcode_macro _ALUMINUM_BED_STABILITY_CHECK]
gcode:
  {% set target_temp = params.BED|float %}
  
  # Hardcoded aluminum bed parameters
  {% set temp_tolerance = 10.0 %}          # ±10°C range
  {% set rate_tolerance = 0.3 %}           # Critical: 0.3°C/check for thermal stability
  {% set check_interval = 12 %}            # 12 seconds between checks
  {% set num_stable_checks = 4 %}          # 4 consecutive stable readings
  {% set max_attempts = 15 %}              # Max 3 minutes of monitoring
  
  # Initialize tracking variables
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=stable_count VALUE=0
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=attempt_count VALUE=0
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=last_temp VALUE={printer['temperature_sensor buildplate'].temperature}
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=is_stable VALUE=0
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=max_attempts VALUE={max_attempts}
  
  # Start the recursive checking process
  _CHECK_ALUMINUM_BED_RATE TARGET={target_temp} ATTEMPT=1

variable_stable_count: 0
variable_attempt_count: 0
variable_last_temp: 0
variable_is_stable: 0
variable_max_attempts: 15

[gcode_macro _CHECK_ALUMINUM_BED_RATE]
gcode:
  {% set target_temp = params.TARGET|float %}
  {% set attempt = params.ATTEMPT|int %}
  {% set max_attempts = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].max_attempts %}
  
  # Wait 12 seconds for aluminum thermal mass to settle
  G4 P12000
  
  # Get current temperature and calculate change rate
  {% set current_temp = printer['temperature_sensor buildplate'].temperature %}
  {% set last_temp = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].last_temp %}
  {% set temp_change = (current_temp - last_temp)|abs %}
  {% set stable_count = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].stable_count %}
  
  # Check thermal stability criteria
  {% set in_temp_range = current_temp >= (target_temp - 10.0) and current_temp <= (target_temp + 10.0) %}
  {% set change_curve_stable = temp_change < 0.3 %}  # Key threshold for aluminum bed
  {% set is_stable_reading = in_temp_range and change_curve_stable %}
  
  RESPOND PREFIX=DEBUG MSG="Attempt {attempt}: {current_temp}°C, rate={temp_change}°C/check, stable={stable_count}/4"
  
  # Update stability counter based on change curve
  {% if is_stable_reading %}
    SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=stable_count VALUE={stable_count + 1}
    RESPOND PREFIX=DEBUG MSG="✓ Change curve stable ({temp_change} < 0.3°C)"
    {% if stable_count + 1 >= 4 %}
      # THERMAL STABILITY ACHIEVED - EXIT IMMEDIATELY
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=is_stable VALUE=1
      RESPOND PREFIX=INFO MSG="✓ Aluminum bed thermally stable at {current_temp}°C (change curve < 0.3°C/check)"
      RESPOND PREFIX=INFO MSG="✓ Thermal stability achieved after {attempt} checks - continuing with print"
    {% else %}
      # Not fully stable yet, continue checking
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=last_temp VALUE={current_temp}
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=attempt_count VALUE={attempt}
      _CHECK_ALUMINUM_BED_RATE TARGET={target_temp} ATTEMPT={attempt + 1}
    {% endif %}
  {% else %}
    # Reset stability counter
    SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=stable_count VALUE=0
    {% if not change_curve_stable %}
      RESPOND PREFIX=DEBUG MSG="⚠ Change curve too steep: {temp_change}°C > 0.3°C/check"
    {% endif %}
    {% if not in_temp_range %}
      RESPOND PREFIX=DEBUG MSG="⚠ Temperature drift: {current_temp}°C outside ±10°C range"
    {% endif %}
    
    # Check if we should continue or timeout
    {% if attempt >= max_attempts %}
      # TIMEOUT - EXIT WITH WARNING
      RESPOND PREFIX=WARN MSG="⚠ Stability timeout after {max_attempts} attempts. Final: {current_temp}°C (stable: {stable_count}/4)"
      RESPOND PREFIX=WARN MSG="⚠ Continuing with print despite incomplete thermal stability"
    {% else %}
      # Continue checking
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=last_temp VALUE={current_temp}
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=attempt_count VALUE={attempt}
      _CHECK_ALUMINUM_BED_RATE TARGET={target_temp} ATTEMPT={attempt + 1}
    {% endif %}
  {% endif %}


[gcode_macro _CUSTOM_PRE_MESH] # Before your printer loads or performs any meshing processes
gcode:



[gcode_macro _CUSTOM_PRE_PRINT] # Just before your print starts
gcode:



[gcode_macro _CUSTOM_PRE_END] # Before the PRINT_END macro starts
gcode:



[gcode_macro _CUSTOM_PRE_SHUTDOWN] # Before the shutdown command is issued - if you have a power relay!!
gcode:



[gcode_macro _CUSTOM_POST_END] # Very last command before the PRINT_END macro finishes - if you have set a shutdown via power relay this may not have time
gcode:



[gcode_macro _CUSTOM_PRE_LOAD] # Before filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD] # After filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD] # Before filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD] # After filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_LOAD_CLEAN] # Before filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD_CLEAN] # After filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD_CLEAN] # Before filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD_CLEAN] # After filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_FIL_CHANGE_PARK] # Before moving to filament change parking
gcode:



[gcode_macro _CUSTOM_POST_FIL_CHANGE_PARK] # After moving to filament change parking
gcode:



[gcode_macro _CUSTOM_PRE_PID_Tune_Mode] # Before PID_Tune_Mode macro runs
gcode:



[gcode_macro _CUSTOM_POST_PID_Tune_Mode] # After PID_Tune_Mode macro runs - but before saving config
gcode:



[gcode_macro _CUSTOM_PAUSE] # After _DEMON_PAUSE macro runs
gcode:



[gcode_macro _CUSTOM_RESUME] # After _DEMON_RESUME macro runs
gcode:



[gcode_macro _CUSTOM_CANCEL] # After _DEMON_CANCEL macro runs
gcode:






###################################################################################################################################################
###################################################################################################################################################
## NOTE: DO NOT EDIT!

[gcode_macro _CEAL_VERSION]
variable_demon_ceal: "1.0.2"
gcode:
