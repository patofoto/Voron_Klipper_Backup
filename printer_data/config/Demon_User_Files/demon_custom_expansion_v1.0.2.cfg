
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# File addition inspired by community suggestion from sermayoral 

###################################################################################################################################################

## Add your very own touches to the Demon macros set! Simply insert your own commands into the macros below for them to be executed at certain stages of 
## the PRINT_START, PRINT_END, LOAD_FILAMENT, UNLOAD_FILAMENT, LOAD_CLEAN & UNLOAD_CLEAN macros! Obviously don't call macros like homing & QGL, Z_Tilt, & 
## other stuff the Demon macros already do or you'll probably end up with some very confusing results! 

## NOTE: I'm in no way responsible for any damage caused to your machine by you adding any code here! Be VERY CAREFUL what you add!

## NOTE: If you are getting some strange results & you need to debug your custom expansions the variables section below allows you to turn each one on or 
## off by setting the variable True or False. This is useful if your code is doing something it's not supposed to, or if you simply wish to deactivate something.
## NOTE: It's highly recommended to start with a correctly set up & working system BEFORE adding any Custom Expansions!

############################################## CHANGE YOUR CUSTOM EXPANSION ACTIVE LIST HERE!! ####################################################
###################################################################################################################################################

[gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST]

###################################################################################################################################################
## MASTER ENABLE SWITCH ###########################################################################################################################

variable_ceal_master_enable: True

###################################################################################################################################################
## PRINT_START EXAPANSION #########################################################################################################################

## Set each variable to True to activate the custom macro, or False to deactivate it!

variable_pre_start: False
variable_pre_heating: False
variable_pre_homing: False
variable_pre_bed_heating_wait: False
variable_pre_level: True
variable_pre_mesh: False
variable_pre_print: False

###################################################################################################################################################
## PRINT_END EXPANSION ############################################################################################################################ 

variable_pre_end: False
variable_pre_shutdown: False
variable_post_end: False

###################################################################################################################################################
## LOAD_FILAMENT EXPANSION ########################################################################################################################

variable_pre_load: False
variable_post_load: False

###################################################################################################################################################
## UNLOAD_FILAMENT EXPANSION ######################################################################################################################

variable_pre_unload: False
variable_post_unload: False

###################################################################################################################################################
## LOAD_CLEAN_FILAMENT EXPANSION ##################################################################################################################

variable_pre_load_clean: False
variable_post_load_clean: False

###################################################################################################################################################
## UNLOAD_CLEAN_FILAMENT EXPANSION ################################################################################################################

variable_pre_unload_clean: False
variable_post_unload_clean: False

###################################################################################################################################################
## PID TUNE EXPANSION ################################################################################################################

variable_pre_pid_tune_mode: False
variable_post_pid_tune_mode: False

###################################################################################################################################################
## PAUSE, RESUME & CANCEL EXPANSION ###############################################################################################################

variable_pause: False
variable_resume: False
variable_cancel: False

###################################################################################################################################################

gcode: # DO NOT EDIT OR ADD ANYTHING IN THIS SECTION!!

###################################################################################################################################################
###################################################################################################################################################






###################################################################################################################################################

## Add your custom expansion code for each macro under the "gcode:" line but before the next "gcode_macro" section. Try to keep things neat & tidy as
## this helps you read it & understand whats going on, this is very helpful a week later when you come back to make edits! 

## Remeber your double space indent at the start of each new line!
## Try to add and perfect one macro at a time as its easier to deal with things if done like that!

################################################### ADD YOUR CUSTOM EXPANSION CODE HERE!! #########################################################
###################################################################################################################################################

[gcode_macro _CUSTOM_PRE_START] # Very first action after you hit print!
gcode:



[gcode_macro _CUSTOM_PRE_HEATING] # Before your nozzle & bed start heating
gcode:



[gcode_macro _CUSTOM_PRE_HOMING] # Before your printer homes - homing is conditional!
gcode:



[gcode_macro _CUSTOM_PRE_BED_HEATING_WAIT] # Before your printer waits for your bed temp & starts any heat soaks or timers
gcode:



[gcode_macro _CUSTOM_PRE_LEVEL] # After your printer is fully heated but before any machine levelling is commanded
gcode:
  {% set first_layer_bedtemp = params.BED|int %}
  {% set actual_bed_temp = printer['temperature_sensor buildplate'].temperature|default(0) %}
  
  # Set the bed temperature and wait for it to reach target
  M190 S{first_layer_bedtemp}
  
  # Hardcoded change rate parameters optimized for aluminum bed
  {% set rate_tolerance = 0.3 %}          # Key threshold: change rate must slow to 0.3°C per check
  {% set check_interval = 12 %}           # 12 seconds allows aluminum thermal mass to settle
  {% set num_stable_checks = 4 %}         # 4 consecutive stable change rate readings
  {% set max_attempts = 15 %}             # Up to 3 minutes of change rate monitoring
  
  M117 Bed heated to {first_layer_bedtemp}C, monitoring change rate...
  RESPOND PREFIX=INFO MSG="Bed heated to {first_layer_bedtemp}C, monitoring temperature change rate..."
  
  # Skip temperature range wait - go straight to change rate monitoring
  M117 Monitoring temperature change rate (target: < 0.3C/check)
  RESPOND PREFIX=INFO MSG="Waiting for temperature change rate to slow down (target: < 0.3C per check)"
  
  # Use helper macro for the stability monitoring loop
  _ALUMINUM_BED_STABILITY_CHECK

[gcode_macro _ALUMINUM_BED_STABILITY_CHECK]
gcode:
  # Hardcoded timer-based stability parameters for aluminum bed
  {% set stability_timer = 60 %}          # Timer duration: 60 seconds of continuous stability required
  {% set temp_tolerance = 0.5 %}          # Temperature must stay within ±0.5°C during timer period
  {% set check_interval = 3 %}            # Check every 3 seconds during timer period
  {% set max_restarts = 10 %}             # Maximum number of timer restarts allowed
  
  # Initialize tracking variables
  {% set initial_temp = printer['temperature_sensor buildplate'].temperature %}
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=baseline_temp VALUE={initial_temp}
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=timer_restarts VALUE=0
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=is_stable VALUE=0
  
  RESPOND PREFIX=DEBUG MSG="Starting timer-based stability check from {initial_temp}C"
  M117 Starting {stability_timer}s stability timer (±{temp_tolerance}C)
  RESPOND PREFIX=INFO MSG="Starting {stability_timer}s stability timer - temperature must stay within ±{temp_tolerance}C"
  
  # Start timer-based monitoring
  _TIMER_STABILITY_CHECK TIMER={stability_timer} TOLERANCE={temp_tolerance} INTERVAL={check_interval} MAX_RESTARTS={max_restarts}
  
  # Final status report
  {% set final_temp = printer['temperature_sensor buildplate'].temperature %}
  {% set timer_restarts = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].timer_restarts %}
  {% set is_stable_final = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].is_stable %}
  
  RESPOND PREFIX=DEBUG MSG="Final status: is_stable={is_stable_final}, timer_restarts={timer_restarts}, temp={final_temp}C"
  
  {% if is_stable_final %}
    M117 Temperature stable for 60s! Continuing print prep...
    RESPOND PREFIX=INFO MSG="Temperature remained stable for 60 seconds! Continuing with print preparation..."
    RESPOND PREFIX=DEBUG MSG="Timer-based stability achieved - returning control to print process"
  {% else %}
    M117 Stability timer exceeded max restarts - proceeding with print
    RESPOND PREFIX=WARN MSG="Stability timer exceeded max restarts. Proceeding with print (bed: {final_temp}C, restarts: {timer_restarts})"
    RESPOND PREFIX=DEBUG MSG="Timer-based stability failed - returning control to print process anyway"
  {% endif %}

variable_baseline_temp: 0
variable_timer_restarts: 0
variable_is_stable: 0

[gcode_macro _TIMER_STABILITY_CHECK]
gcode:
  {% set timer_duration = params.TIMER|int %}
  {% set temp_tolerance = params.TOLERANCE|float %}
  {% set check_interval = params.INTERVAL|int %}
  {% set max_restarts = params.MAX_RESTARTS|int %}
  
  # Calculate how many checks we need to complete the timer
  {% set total_checks = (timer_duration / check_interval)|int %}
  
  RESPOND PREFIX=DEBUG MSG="Timer setup: {timer_duration}s duration, checking every {check_interval}s for {total_checks} checks"
  
  # Start the timer countdown
  _RUN_STABILITY_TIMER CHECKS_REMAINING={total_checks} TOLERANCE={temp_tolerance} INTERVAL={check_interval} MAX_RESTARTS={max_restarts} TIMER_DURATION={timer_duration}

[gcode_macro _RUN_STABILITY_TIMER]
gcode:
  {% set checks_remaining = params.CHECKS_REMAINING|int %}
  {% set temp_tolerance = params.TOLERANCE|float %}
  {% set check_interval = params.INTERVAL|int %}
  {% set max_restarts = params.MAX_RESTARTS|int %}
  {% set timer_duration = params.TIMER_DURATION|int %}
  
  {% if checks_remaining <= 0 %}
    # Timer completed successfully
    SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=is_stable VALUE=1
    M117 Timer completed! Temperature stable for full duration
    RESPOND PREFIX=INFO MSG="Stability timer completed successfully - temperature remained stable"
  {% else %}
    # Check current temperature vs baseline
    {% set current_temp = printer['temperature_sensor buildplate'].temperature %}
    {% set baseline_temp = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].baseline_temp %}
    {% set temp_diff = (current_temp - baseline_temp)|abs %}
    {% set restarts = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].timer_restarts %}
    
    # Calculate time remaining
    {% set time_remaining = checks_remaining * check_interval %}
    
    RESPOND PREFIX=DEBUG MSG="Timer check: {current_temp}C vs {baseline_temp}C baseline, diff={temp_diff}C, {time_remaining}s remaining"
    
    {% if temp_diff <= temp_tolerance %}
      # Temperature still stable, continue timer
      M117 Timer: {time_remaining}s remaining (stable ±{temp_tolerance}C)
      RESPOND PREFIX=INFO MSG="Temperature stable ({current_temp}C) - {time_remaining}s remaining"
      
      # Wait for next check interval
      G4 P{check_interval * 1000}
      
      # Continue timer countdown
      _RUN_STABILITY_TIMER CHECKS_REMAINING={checks_remaining - 1} TOLERANCE={temp_tolerance} INTERVAL={check_interval} MAX_RESTARTS={max_restarts} TIMER_DURATION={timer_duration}
    {% else %}
      # Temperature went outside tolerance, restart timer
      {% set new_restarts = restarts + 1 %}
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=timer_restarts VALUE={new_restarts}
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=baseline_temp VALUE={current_temp}
      
      {% if new_restarts >= max_restarts %}
        # Too many restarts, give up
        M117 Timer exceeded max restarts - stability failed
        RESPOND PREFIX=WARN MSG="Stability timer restarted too many times ({new_restarts}/{max_restarts}) - giving up"
      {% else %}
        # Restart timer with new baseline
        {% set total_checks = (timer_duration / check_interval)|int %}  # Reset to full duration
        M117 Timer restarted due to temp change - restart {new_restarts}/{max_restarts}
        RESPOND PREFIX=INFO MSG="Temperature changed ({temp_diff}C > {temp_tolerance}C) - restarting timer (restart {new_restarts}/{max_restarts})"
        
        # Restart timer countdown with new baseline
        _RUN_STABILITY_TIMER CHECKS_REMAINING={total_checks} TOLERANCE={temp_tolerance} INTERVAL={check_interval} MAX_RESTARTS={max_restarts} TIMER_DURATION={timer_duration}
      {% endif %}
    {% endif %}
  {% endif %}


[gcode_macro _CUSTOM_PRE_MESH] # Before your printer loads or performs any meshing processes
gcode:



[gcode_macro _CUSTOM_PRE_PRINT] # Just before your print starts
gcode:



[gcode_macro _CUSTOM_PRE_END] # Before the PRINT_END macro starts
gcode:



[gcode_macro _CUSTOM_PRE_SHUTDOWN] # Before the shutdown command is issued - if you have a power relay!!
gcode:



[gcode_macro _CUSTOM_POST_END] # Very last command before the PRINT_END macro finishes - if you have set a shutdown via power relay this may not have time
gcode:



[gcode_macro _CUSTOM_PRE_LOAD] # Before filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD] # After filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD] # Before filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD] # After filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_LOAD_CLEAN] # Before filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD_CLEAN] # After filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD_CLEAN] # Before filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD_CLEAN] # After filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_FIL_CHANGE_PARK] # Before moving to filament change parking
gcode:



[gcode_macro _CUSTOM_POST_FIL_CHANGE_PARK] # After moving to filament change parking
gcode:



[gcode_macro _CUSTOM_PRE_PID_Tune_Mode] # Before PID_Tune_Mode macro runs
gcode:



[gcode_macro _CUSTOM_POST_PID_Tune_Mode] # After PID_Tune_Mode macro runs - but before saving config
gcode:



[gcode_macro _CUSTOM_PAUSE] # After _DEMON_PAUSE macro runs
gcode:



[gcode_macro _CUSTOM_RESUME] # After _DEMON_RESUME macro runs
gcode:



[gcode_macro _CUSTOM_CANCEL] # After _DEMON_CANCEL macro runs
gcode:






###################################################################################################################################################
###################################################################################################################################################
## NOTE: DO NOT EDIT!

[gcode_macro _CEAL_VERSION]
variable_demon_ceal: "1.0.2"
gcode:
