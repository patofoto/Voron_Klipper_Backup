
###################################################
#######>>>>>>>>>>  3DPrintDemon  <<<<<<<<<<<#######
#######   https://github.com/3DPrintDemon   #######

# File addition inspired by community suggestion from sermayoral 

###################################################################################################################################################

## Add your very own touches to the Demon macros set! Simply insert your own commands into the macros below for them to be executed at certain stages of 
## the PRINT_START, PRINT_END, LOAD_FILAMENT, UNLOAD_FILAMENT, LOAD_CLEAN & UNLOAD_CLEAN macros! Obviously don't call macros like homing & QGL, Z_Tilt, & 
## other stuff the Demon macros already do or you'll probably end up with some very confusing results! 

## NOTE: I'm in no way responsible for any damage caused to your machine by you adding any code here! Be VERY CAREFUL what you add!

## NOTE: If you are getting some strange results & you need to debug your custom expansions the variables section below allows you to turn each one on or 
## off by setting the variable True or False. This is useful if your code is doing something it's not supposed to, or if you simply wish to deactivate something.
## NOTE: It's highly recommended to start with a correctly set up & working system BEFORE adding any Custom Expansions!

############################################## CHANGE YOUR CUSTOM EXPANSION ACTIVE LIST HERE!! ####################################################
###################################################################################################################################################

[gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST]

###################################################################################################################################################
## MASTER ENABLE SWITCH ###########################################################################################################################

variable_ceal_master_enable: True

###################################################################################################################################################
## PRINT_START EXAPANSION #########################################################################################################################

## Set each variable to True to activate the custom macro, or False to deactivate it!

variable_pre_start: False
variable_pre_heating: False
variable_pre_homing: False
variable_pre_bed_heating_wait: False
variable_pre_level: True
variable_pre_mesh: False
variable_pre_print: False

###################################################################################################################################################
## PRINT_END EXPANSION ############################################################################################################################ 

variable_pre_end: False
variable_pre_shutdown: False
variable_post_end: False

###################################################################################################################################################
## LOAD_FILAMENT EXPANSION ########################################################################################################################

variable_pre_load: False
variable_post_load: False

###################################################################################################################################################
## UNLOAD_FILAMENT EXPANSION ######################################################################################################################

variable_pre_unload: False
variable_post_unload: False

###################################################################################################################################################
## LOAD_CLEAN_FILAMENT EXPANSION ##################################################################################################################

variable_pre_load_clean: False
variable_post_load_clean: False

###################################################################################################################################################
## UNLOAD_CLEAN_FILAMENT EXPANSION ################################################################################################################

variable_pre_unload_clean: False
variable_post_unload_clean: False

###################################################################################################################################################
## PID TUNE EXPANSION ################################################################################################################

variable_pre_pid_tune_mode: False
variable_post_pid_tune_mode: False

###################################################################################################################################################
## PAUSE, RESUME & CANCEL EXPANSION ###############################################################################################################

variable_pause: False
variable_resume: False
variable_cancel: False

###################################################################################################################################################

gcode: # DO NOT EDIT OR ADD ANYTHING IN THIS SECTION!!

###################################################################################################################################################
###################################################################################################################################################






###################################################################################################################################################

## Add your custom expansion code for each macro under the "gcode:" line but before the next "gcode_macro" section. Try to keep things neat & tidy as
## this helps you read it & understand whats going on, this is very helpful a week later when you come back to make edits! 

## Remeber your double space indent at the start of each new line!
## Try to add and perfect one macro at a time as its easier to deal with things if done like that!

################################################### ADD YOUR CUSTOM EXPANSION CODE HERE!! #########################################################
###################################################################################################################################################

[gcode_macro _CUSTOM_PRE_START] # Very first action after you hit print!
gcode:



[gcode_macro _CUSTOM_PRE_HEATING] # Before your nozzle & bed start heating
gcode:



[gcode_macro _CUSTOM_PRE_HOMING] # Before your printer homes - homing is conditional!
gcode:



[gcode_macro _CUSTOM_PRE_BED_HEATING_WAIT] # Before your printer waits for your bed temp & starts any heat soaks or timers
gcode:

######################################################################################################################################################
######################################################################################################################################################

[gcode_macro _CUSTOM_PRE_LEVEL] # After your printer is fully heated but before any machine levelling is commanded
gcode:
  {% set first_layer_bedtemp = params.BED|int %}
  {% set actual_bed_temp = printer['temperature_sensor buildplate'].temperature|default(0) %}
  
  # Set the bed temperature and wait for it to reach target
  M190 S{first_layer_bedtemp}
  
  # Hardcoded change rate parameters optimized for aluminum bed
  {% set rate_tolerance = 0.3 %}          # Key threshold: change rate must slow to 0.3°C per check
  {% set check_interval = 12 %}           # 12 seconds allows aluminum thermal mass to settle
  {% set num_stable_checks = 4 %}         # 4 consecutive stable change rate readings
  {% set max_attempts = 15 %}             # Up to 3 minutes of change rate monitoring
  
  M117 Bed heated to {first_layer_bedtemp}C, monitoring change rate...
  RESPOND PREFIX=INFO MSG="Bed heated to {first_layer_bedtemp}C, monitoring temperature change rate..."
  
  # Skip temperature range wait - go straight to change rate monitoring
  M117 Monitoring temperature change rate (target: < 0.3C/check)
  RESPOND PREFIX=INFO MSG="Waiting for temperature change rate to slow down (target: < 0.3C per check)"
  
  # Use helper macro for the stability monitoring loop
  _ALUMINUM_BED_STABILITY_CHECK

[gcode_macro _ALUMINUM_BED_STABILITY_CHECK]
gcode:
  # Hardcoded rate-of-change monitoring parameters for aluminum bed
  {% set monitor_duration = 60 %}         # Monitor temperature change over 60 seconds
  {% set max_change_rate = 0.5 %}         # Maximum temperature change allowed: 0.5°C per 60 seconds
  {% set check_interval = 3 %}            # Check every 3 seconds
  {% set max_attempts = 20 %}             # Maximum monitoring cycles before timeout
  
  # Initialize tracking variables
  {% set initial_temp = printer['temperature_sensor buildplate'].temperature %}
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=baseline_temp VALUE={initial_temp}
  SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=is_stable VALUE=0
  
  RESPOND PREFIX=DEBUG MSG="Starting rate-of-change monitoring from {initial_temp}C"
  M117 Monitoring thermal equilibrium (max {max_change_rate}C/60s)
  RESPOND PREFIX=INFO MSG="Monitoring bed thermal equilibrium - waiting for change rate ≤{max_change_rate}C per {monitor_duration}s"

  # Start rate-of-change monitoring
  _RATE_CHANGE_MONITOR DURATION={monitor_duration} MAX_RATE={max_change_rate} INTERVAL={check_interval} MAX_ATTEMPTS={max_attempts}

  # Allow variables to settle before reading final status
  G4 P500  
  
  # Final status report - read fresh results from rate-of-change monitor
  {% set final_temp = printer['temperature_sensor buildplate'].temperature %}
  {% set is_stable_final = printer["gcode_macro _ALUMINUM_BED_STABILITY_CHECK"].is_stable %}
  {% set completed_attempts = printer["gcode_macro _RATE_CHANGE_MONITOR"].completed_attempts %}
  {% set max_attempts = printer["gcode_macro _RATE_CHANGE_MONITOR"].max_attempts %}
  {% set monitor_success = printer["gcode_macro _RATE_CHANGE_MONITOR"].monitor_success %}
  
  RESPOND PREFIX=DEBUG MSG="Final status: is_stable={is_stable_final}, attempts={completed_attempts}/{max_attempts}, success={monitor_success}, temp={final_temp}C"

  {% if is_stable_final %}
    M117 Thermal equilibrium achieved! Continuing print prep...
    RESPOND PREFIX=INFO MSG="Thermal equilibrium achieved - bed heating rate ≤0.5C/60s! Continuing with print preparation..."
    RESPOND PREFIX=DEBUG MSG="Rate-of-change monitoring successful - returning control to print process"
  {% else %}
    M117 Thermal monitoring timeout - proceeding with print
    RESPOND PREFIX=WARN MSG="Thermal monitoring timeout ({completed_attempts}/{max_attempts} attempts). Proceeding with print (bed: {final_temp}C)"
    RESPOND PREFIX=DEBUG MSG="Rate-of-change monitoring timeout - returning control to print process anyway"
  {% endif %}

variable_baseline_temp: 0
variable_is_stable: 0

[gcode_macro _RATE_CHANGE_MONITOR]
gcode:
  {% set monitor_duration = params.DURATION|int %}
  {% set max_change_rate = params.MAX_RATE|float %}
  {% set check_interval = params.INTERVAL|int %}
  {% set max_attempts = params.MAX_ATTEMPTS|int %}
  
  RESPOND PREFIX=DEBUG MSG="Rate monitoring setup: {monitor_duration}s duration, max change {max_change_rate}C, max {max_attempts} attempts"
  
  # Initialize rate-of-change monitoring system
  SET_GCODE_VARIABLE MACRO=_RATE_CHANGE_MONITOR VARIABLE=monitor_duration VALUE={monitor_duration}
  SET_GCODE_VARIABLE MACRO=_RATE_CHANGE_MONITOR VARIABLE=max_change_rate VALUE={max_change_rate}
  SET_GCODE_VARIABLE MACRO=_RATE_CHANGE_MONITOR VARIABLE=max_attempts VALUE={max_attempts}
  SET_GCODE_VARIABLE MACRO=_RATE_CHANGE_MONITOR VARIABLE=completed_attempts VALUE=0
  SET_GCODE_VARIABLE MACRO=_RATE_CHANGE_MONITOR VARIABLE=monitor_success VALUE=0
  
  RESPOND PREFIX=INFO MSG="Starting rate-of-change monitoring - waiting for heating to slow to ≤{max_change_rate}C per {monitor_duration}s"
  M117 Monitoring thermal equilibrium...
  
  # Start the sequential monitoring attempts
  _RATE_MONITOR_ATTEMPT ATTEMPT=1
  _RATE_MONITOR_ATTEMPT ATTEMPT=2
  _RATE_MONITOR_ATTEMPT ATTEMPT=3
  _RATE_MONITOR_ATTEMPT ATTEMPT=4
  _RATE_MONITOR_ATTEMPT ATTEMPT=5
  _RATE_MONITOR_ATTEMPT ATTEMPT=6
  _RATE_MONITOR_ATTEMPT ATTEMPT=7
  _RATE_MONITOR_ATTEMPT ATTEMPT=8
  _RATE_MONITOR_ATTEMPT ATTEMPT=9
  _RATE_MONITOR_ATTEMPT ATTEMPT=10
  _RATE_MONITOR_ATTEMPT ATTEMPT=11
  _RATE_MONITOR_ATTEMPT ATTEMPT=12
  _RATE_MONITOR_ATTEMPT ATTEMPT=13
  _RATE_MONITOR_ATTEMPT ATTEMPT=14
  _RATE_MONITOR_ATTEMPT ATTEMPT=15
  _RATE_MONITOR_ATTEMPT ATTEMPT=16
  _RATE_MONITOR_ATTEMPT ATTEMPT=17
  _RATE_MONITOR_ATTEMPT ATTEMPT=18
  _RATE_MONITOR_ATTEMPT ATTEMPT=19
  _RATE_MONITOR_ATTEMPT ATTEMPT=20
  
  # Final evaluation after all attempts
  _RATE_MONITOR_FINAL

variable_monitor_duration: 60
variable_max_change_rate: 0.5
variable_max_attempts: 20
variable_completed_attempts: 0
variable_monitor_success: 0

[gcode_macro _RATE_MONITOR_ATTEMPT]
gcode:
  {% set attempt = params.ATTEMPT|int %}
  
  # Only perform attempt if monitoring hasn't succeeded yet
  {% if not printer["gcode_macro _RATE_CHANGE_MONITOR"].monitor_success %}
    {% set monitor_duration = printer["gcode_macro _RATE_CHANGE_MONITOR"].monitor_duration %}
    {% set max_change_rate = printer["gcode_macro _RATE_CHANGE_MONITOR"].max_change_rate %}
    {% set max_attempts = printer["gcode_macro _RATE_CHANGE_MONITOR"].max_attempts %}
    {% set completed_attempts = printer["gcode_macro _RATE_CHANGE_MONITOR"].completed_attempts %}
    
    # Take initial temperature reading
    {% set start_temp = printer['temperature_sensor buildplate'].temperature %}
    RESPOND PREFIX=INFO MSG="Attempt {attempt}/{max_attempts}: Starting {monitor_duration}s monitoring from {start_temp}C"
    M117 Attempt {attempt}/{max_attempts}: Monitoring from {start_temp}C
    
    # Wait for the full monitoring duration
    G4 P{monitor_duration * 1000}
    
    # Take final temperature reading
    {% set end_temp = printer['temperature_sensor buildplate'].temperature %}
    {% set temp_change = end_temp - start_temp %}
    {% set change_rate = temp_change|abs %}
    
    RESPOND PREFIX=DEBUG MSG="Attempt {attempt}: {start_temp}C → {end_temp}C, change={temp_change|round(2)}C, rate={change_rate|round(2)}C/{monitor_duration}s"
    
    # Update attempt counter
    {% set new_completed = completed_attempts + 1 %}
    SET_GCODE_VARIABLE MACRO=_RATE_CHANGE_MONITOR VARIABLE=completed_attempts VALUE={new_completed}
    
    {% if change_rate <= max_change_rate %}
      # Rate of change is acceptable - thermal equilibrium achieved!
      SET_GCODE_VARIABLE MACRO=_RATE_CHANGE_MONITOR VARIABLE=monitor_success VALUE=1
      SET_GCODE_VARIABLE MACRO=_ALUMINUM_BED_STABILITY_CHECK VARIABLE=is_stable VALUE=1
      M117 Thermal equilibrium achieved! ({change_rate|round(2)}C/{monitor_duration}s)
      RESPOND PREFIX=INFO MSG="SUCCESS: Thermal equilibrium achieved! Temperature change rate {change_rate|round(2)}C/{monitor_duration}s ≤ {max_change_rate}C/{monitor_duration}s"
    {% else %}
      # Rate of change too high - bed still heating, continue monitoring
      M117 Still heating: {change_rate|round(2)}C/{monitor_duration}s > {max_change_rate}C/{monitor_duration}s
      RESPOND PREFIX=WARN MSG="Attempt {attempt}: Still heating - change rate {change_rate|round(2)}C/{monitor_duration}s > {max_change_rate}C/{monitor_duration}s"
    {% endif %}
  {% else %}
    # Monitoring already succeeded, skip this attempt
    RESPOND PREFIX=DEBUG MSG="Skipping attempt {attempt} - thermal equilibrium already achieved"
  {% endif %}

[gcode_macro _RATE_MONITOR_FINAL]
gcode:
  # Evaluate final monitoring result
  {% set monitor_success = printer["gcode_macro _RATE_CHANGE_MONITOR"].monitor_success %}
  {% set completed_attempts = printer["gcode_macro _RATE_CHANGE_MONITOR"].completed_attempts %}
  {% set max_attempts = printer["gcode_macro _RATE_CHANGE_MONITOR"].max_attempts %}
  {% set final_temp = printer['temperature_sensor buildplate'].temperature %}
  
  {% if monitor_success %}
    # Successfully achieved thermal equilibrium
    M117 Thermal equilibrium confirmed! Continuing with print...
    RESPOND PREFIX=INFO MSG="SUCCESS: Thermal equilibrium confirmed - bed heating rate has slowed to acceptable level"
  {% else %}
    # Failed to achieve equilibrium within max attempts
    M117 Thermal monitoring timeout ({completed_attempts}/{max_attempts})
    RESPOND PREFIX=WARN MSG="Thermal monitoring timeout: {completed_attempts}/{max_attempts} attempts completed without achieving equilibrium"
  {% endif %}
  
  RESPOND PREFIX=DEBUG MSG="Final result: success={monitor_success}, attempts={completed_attempts}/{max_attempts}, temp={final_temp}C"








######################################################################################################################################################
######################################################################################################################################################


[gcode_macro _CUSTOM_PRE_MESH] # Before your printer loads or performs any meshing processes
gcode:



[gcode_macro _CUSTOM_PRE_PRINT] # Just before your print starts
gcode:



[gcode_macro _CUSTOM_PRE_END] # Before the PRINT_END macro starts
gcode:



[gcode_macro _CUSTOM_PRE_SHUTDOWN] # Before the shutdown command is issued - if you have a power relay!!
gcode:



[gcode_macro _CUSTOM_POST_END] # Very last command before the PRINT_END macro finishes - if you have set a shutdown via power relay this may not have time
gcode:



[gcode_macro _CUSTOM_PRE_LOAD] # Before filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD] # After filament LOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD] # Before filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD] # After filament UNLOAD macro runs
gcode:



[gcode_macro _CUSTOM_PRE_LOAD_CLEAN] # Before filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_LOAD_CLEAN] # After filament LOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_UNLOAD_CLEAN] # Before filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_POST_UNLOAD_CLEAN] # After filament UNLOAD_CLEAN macro runs
gcode:



[gcode_macro _CUSTOM_PRE_FIL_CHANGE_PARK] # Before moving to filament change parking
gcode:



[gcode_macro _CUSTOM_POST_FIL_CHANGE_PARK] # After moving to filament change parking
gcode:



[gcode_macro _CUSTOM_PRE_PID_Tune_Mode] # Before PID_Tune_Mode macro runs
gcode:



[gcode_macro _CUSTOM_POST_PID_Tune_Mode] # After PID_Tune_Mode macro runs - but before saving config
gcode:



[gcode_macro _CUSTOM_PAUSE] # After _DEMON_PAUSE macro runs
gcode:



[gcode_macro _CUSTOM_RESUME] # After _DEMON_RESUME macro runs
gcode:



[gcode_macro _CUSTOM_CANCEL] # After _DEMON_CANCEL macro runs
gcode:






###################################################################################################################################################
###################################################################################################################################################
## NOTE: DO NOT EDIT!

[gcode_macro _CEAL_VERSION]
variable_demon_ceal: "1.0.2"
gcode:
